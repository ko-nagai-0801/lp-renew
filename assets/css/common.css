/* =============================================================
   common.css  –  BEM base + utilities
   ========================================================== */

/*
  ── Breakpoints ────────────────────────────
  xs  : 0    – 575px   （スマホ縦）
  sm  : 576  – 767px   （スマホ横）
  md  : 768  – 991px   （タブレット縦）
  lg  : 992  – 1199px  （タブレット横 / PC小）
  xl  : 1200 – ∞       （PC大）
  ──────────────────────────────────────────
*/

/* ================================
   カスタムプロパティ（色・影・半径など）
   ================================ */
:root {
  --clr-base: #fff;
  --clr-text: #333;
  --clr-gray-050: #f9fafb;
  --clr-gray-100: #f4f6f8;
  --clr-gray-200: #e5e7eb;
  --f-black: #1c1c1c;
  --f-white: #fff;
  --f-blue: #009cdf;
  --f-blue-dark: #007bb5;
  --f-navy: #005b94;
  --f-yellow: #ffc107;
  --f-gray: #686f75;
  --c-white: #fff;
  --c-navy: #005b94;
  --c-blue: #009cdf;
  --c-blue-dark: #007bb5;
  --c-yellow: #ffc107;
  --c-gray: #686f75;

  --radius-card: 16px;
  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.08);
  --shadow-lg: 0 12px 24px rgba(0, 0, 0, 0.12);

  --grad-blue: linear-gradient(135deg, #0dcaf0 0%, #009cdf 100%);
}

/* ----------- Base ------------------------------------------------ */
html {
  scroll-padding-top: 96px;
  scroll-behavior: smooth;
  /* scroll-behavior: auto; */
}
body {
  font-size: 16px;
  font-family: "Roboto", "Noto Sans JP", sans-serif;
  color: #1c1c1c;
  overflow-wrap: break-word;
  letter-spacing: 0.05em;
}
a {
  text-decoration: none;
  color: #1c1c1c;
  transition: 0.3s;
}
a:hover {
  color: inherit;
}
li {
  list-style: none;
}
::selection {
  background: #005b94;
  color: #fff;
}
input,
select {
  vertical-align: middle;
}

/* main {
  background-image: url(../img/bg-06.webp);
  background-repeat: repeat;
  background-position: center;
  background-size: contain;
} */

/* =========================================
   BRICK WALL – staggered pattern
   ========================================= */

/* “ＬｉＮＥ／ＰＡＲＫ” の文字詰め補正 -------------------------- */
#LiNE,
#PARK {
  letter-spacing: -0.1rem;
}

/* ----------- Visually hidden (アクセシビリティ用) --------------- */
.visually-hidden {
  position: absolute !important;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
}

/* =============================================================
  Container Styles
   ========================================================== */
.container {
  width: 90%;
  max-width: 90%;
  margin: 0 auto;
  padding: 0 25px;
}
@media (max-width: 1200px) {
  .container {
    width: 96%;
    max-width: 1000px;
    padding: 0 20px;
  }
}
@media (max-width: 992px) {
  .container {
    max-width: 960px;
    padding: 0 15px;
  }
}
@media (max-width: 768px) {
  .container {
    /* max-width: 1300px; */
    padding: 0 25px;
  }
}
@media (max-width: 768px) {
  .container {
    /* max-width: 1300px; */
    padding: 0 25px;
  }
}

/* =============================================================
   Page-top button
   ========================================================== */
.page-top-link {
  position: fixed;
  bottom: 30px;
  right: 30px;
  width: 56px;
  height: 56px;
  background: #005b94;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
  transition: 0.5s;
}
.page-top-link:hover {
  background: #007bb5;
}
@media (max-width: 991px) {
  .page-top-link {
    width: 44px;
    height: 44px;
    bottom: 15px;
    right: 15px;
  }
}

/* ================================
   セクション汎用
   ================================ */
.section {
  padding-block: 6rem;
}
@media (max-width: 768px) {
  .section {
    padding-block: 3rem;
  }
}

/* ---------- ① 初期状態は不可視 ---------- */
.section__sub,
.section__title .char,
.section__catch,
.section__text {
  opacity: 0;
  transform: translateY(20px);
}

/* ---------- ② アニメーション定義 ---------- */
@keyframes slideUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes fadeIn {
  to {
    opacity: 1;
    transform: none;
  }
}
@keyframes charFade {
  to {
    opacity: 1;
    transform: none;
  }
}

.section.is-visible .section__sub {
  animation: slideUp 0.6s cubic-bezier(0.25, 0.8, 0.25, 1) forwards;
}

.section.is-visible .section__title .char {
  animation: charFade 0.45s ease forwards;
  /* 一文字ずつ遅延 */
  animation-delay: calc(var(--i) * 0.1s + 0.2s);
}

.section.is-visible .section__catch {
  animation: fadeIn 0.8s ease forwards;
  animation-delay: 0.5s;
}

.section.is-visible .section__text {
  animation: fadeIn 0.8s ease forwards;
  animation-delay: 1s;
}

/* フォントサイズ等 */
.section__header {
  position: relative;
  margin-bottom: 1rem;
}

.section__sub {
  color: var(--f-navy);
  border-bottom: 2px solid var(--f-navy);
  font-weight: 700;
  font-size: clamp(1rem, 2vw, 3rem);
  line-height: 1;
  margin: 0 0 0.2em;
  width: max-content;
}
.section__sub--recruit {
  color: #ffd600;
  border-bottom: 2px solid var(--f-yellow);
}
.section__title {
  color: var(--f-black);
  font-size: clamp(1.5rem, 3vw, 5rem);
  font-weight: 900;
  margin: 0;
  white-space: nowrap;
}
.section__title--recruit {
  color: var(--f-white);
}
.section__catch {
  font-size: clamp(1.2rem, 1.6vw, 2.5rem);
  font-weight: 700;
  color: var(--f-navy);
  margin: 1.5rem 0;
}
.section__text {
  font-size: clamp(0.875rem, 1.2vw, 2rem);
}

/* =============================================================
   Scroll-top utility if hidden
   ========================================================== */
/* JS フラグで .is-hidden を付与する想定 */
.page-top-link.is-hidden {
  opacity: 0;
  pointer-events: none;
}

/* =======================
   CTA Button Styles
   ==================== */

.c-cta {
  text-align: center;
}
/* ===== Base ===== */
.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  min-width: 200px;
  width: 25vw;
  padding: 1rem 1.5rem;
  font-size: clamp(1.2rem, 1.6vw, 2.5rem);
  font-weight: 700;
  border-radius: 6px;
  box-shadow: 0px 5px 15px 0px rgba(0, 0, 0, 0.35);
  color: var(--f-white);
  background: var(--c-navy);
  transition: background 0.3s; /* ← どのプロパティか明示 */
}
.button:hover {
  color: var(--f-white);
  background: var(--c-blue-dark);
  box-shadow: 0px 0px 0px 0px;
}

/* ===== White Variant ===== */
/* ❶ セレクタを .button.button--white にして優先度↑ */
.button.button--white {
  color: var(--f-navy);
  background: var(--c-white);
}
.button.button--white:hover {
  background: var(--c-blue);
  color: #fff;
}

.button--icon {
  position: relative;
}

/* ▼ 本体  */
.button--icon::after {
  content: "\F231"; /* caret-right-fill のコードポイント :contentReference[oaicite:0]{index=0} */
  font-family: "bootstrap-icons";
  font-size: 1em; /* テキストと同サイズ */
  line-height: 1; /* 行高ずれ防止 */
  display: inline-block;
  margin-left: 0.4em; /* テキストとアイコンの隙間 */
  transition: transform 0.3s;
}

/* ▼ ホバーで 4px スライド */
.button--icon:hover::after {
  transform: translateX(4px);
}

/* =======================================
   CTA Button ‒ Hover Micro-interaction
   ==================================== */

/* =============================
   1) ボタン内の文字をゆらゆら
   =========================== */

/* 4～6秒に1回、わずかに膨らむ */
.c-cta__button {
  animation: cta-breath 5.5s ease-in-out infinite;
  will-change: transform;
}
@keyframes cta-breath {
  0%,
  100% {
    transform: translateZ(0) scale(1);
  }
  50% {
    transform: translateZ(0) scale(1.03);
  }
}

/* =============================
   2) 矢印に軽いキックを周期的に
   =========================== */
.c-cta__button::after {
  animation: arrow-nudge 6s ease-out infinite;
}
@keyframes arrow-nudge {
  0%,
  92%,
  100% {
    transform: translateX(0);
  }
  94% {
    transform: translateX(6px);
  }
  96% {
    transform: translateX(3px);
  }
  98% {
    transform: translateX(5px);
  }
}

/* ホバーで矢印アイコンを『伸び ⇒ 戻り』のイージングへ */
@keyframes arrow-slide {
  0% {
    transform: translateX(0);
  }
  60% {
    transform: translateX(6px);
  }
  100% {
    transform: translateX(4px);
  }
}
.c-cta__button:hover::after {
  animation: arrow-slide 0.45s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

/* =============================
   3) ボタン本体のマイクロインタラクション
   =========================== */
.c-cta__button {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.c-cta__button:hover {
  transform: translateY(-2px) scale(1.04);
  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.25);
  transition: transform 0.25s cubic-bezier(0.2, 0.9, 0.2, 1), box-shadow 0.25s;
}

/* クリック瞬間の小さなリップル */
.c-cta__button {
  --ripple: 0;
}
.c-cta__button:active {
  animation: cta-press 160ms ease-out;
}
@keyframes cta-press {
  0% {
    transform: translateY(0) scale(1);
  }
  50% {
    transform: translateY(1px) scale(0.98);
  }
  100% {
    transform: translateY(0) scale(1);
  }
}

/* ==========================================================
   Parallax  –  共通ベース
   （クラス .parallax を付けるだけで適用される）
   ======================================================= */
.parallax {
  --parallax-extra: 0px; /* JSで上書きされる想定 */
  --parallax-offset: 0px;
  --parallax-image: none;
  --parallax-overlay: none;
  position: relative;
  overflow: hidden;
}

/* 背景カーテンのサイズを “100% + 余白” に */
.parallax::before {
  content: "";
  position: absolute;
  top: calc(-1 * var(--parallax-extra) / 2);
  left: 0;
  width: 100%;
  height: calc(100% + var(--parallax-extra));
  background: var(--parallax-overlay),
    var(--parallax-image) center var(--parallax-offset) / cover no-repeat;
  will-change: background-position;
  z-index: -1;
}

/* ==========================================================
   Contact-CTA  –  Parallax を継承したカスタムスタイル
   ======================================================= */
.contact-cta {
  /* 画像とマスクを CSS 変数で上書き */
  --parallax-image: url("../img/contact-cta-bg.webp");
  --parallax-overlay: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4));

  padding: 4rem 1rem;
  color: var(--f-white);
  text-align: center;
  z-index: 10; /* 他要素より前面に置く場合 */
}

.section__header--contact-cta {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* ---- テキスト部分---- */
.section__title--contact-cta {
  color: var(--f-white);
  font-size: clamp(1.5rem, 3vw, 5rem);
  font-weight: 900;
}
.section__sub--contact-cta {
  color: var(--f-white);
  border-bottom: 1px solid var(--f-white);
}
.contact-cta__text {
  line-height: 1.6;
}
